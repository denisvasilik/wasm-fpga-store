CALL $MAIN
FINISH

MAIN:
BEGIN_SUB
	MESSAGE 0 "TESTBENCH: WASM_FPGA_STORE"

	CALL $TEST_WRITE_AND_READ
	CALL $TEST_INVALID_READ

	RETURN_CALL
END_SUB

TEST_WRITE_AND_READ:
BEGIN_SUB
	MESSAGE 0 "TEST_WRITE_AND_READ"

	-- Write to store
	WRITE_FPGA 32 $STOREBLK_ADR_ModuleInstanceUidReg #xAABBCCDD
	WRITE_FPGA 32 $STOREBLK_ADR_SectionUidReg #x11223344
	WRITE_FPGA 32 $STOREBLK_ADR_IdxReg #x55667788
	WRITE_FPGA 32 $STOREBLK_ADR_AddressReg #xAA55AA55

	EQU_VAR WB_VALUE $STOREBLK_VAL_DoRun
	OR_VAR WB_VALUE $STOREBLK_VAL_Write
	EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg $WB_VALUE
	VERIFY_FPGA 32 $STOREBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg #x0
	
	CALL $WAIT_UNTIL_IDLE

	-- Read from store
	EQU_VAR WB_VALUE $STOREBLK_VAL_DoRun
	OR_VAR WB_VALUE $STOREBLK_VAL_Read
	EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg $WB_VALUE
	VERIFY_FPGA 32 $STOREBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg #x0
	
	CALL $WAIT_UNTIL_IDLE
	
	VERIFY_FPGA 32 $STOREBLK_ADR_AddressReg WB_VALUE #xAA55AA55 #xFFFFFFFF
		
	RETURN_CALL
END_SUB

TEST_INVALID_READ:
BEGIN_SUB
	MESSAGE 0 "TEST_INVALID_READ"

	-- Write to store
	WRITE_FPGA 32 $STOREBLK_ADR_ModuleInstanceUidReg #xAABBCCDD
	WRITE_FPGA 32 $STOREBLK_ADR_SectionUidReg #x11223344
	WRITE_FPGA 32 $STOREBLK_ADR_IdxReg #x55667788
	WRITE_FPGA 32 $STOREBLK_ADR_AddressReg #xAA55AA55

	EQU_VAR WB_VALUE $STOREBLK_VAL_DoRun
	OR_VAR WB_VALUE $STOREBLK_VAL_Write
	EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg $WB_VALUE
	VERIFY_FPGA 32 $STOREBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg #x0
	
	CALL $WAIT_UNTIL_IDLE

	-- Read from store
	WRITE_FPGA 32 $STOREBLK_ADR_ModuleInstanceUidReg #x0
	
	EQU_VAR WB_VALUE $STOREBLK_VAL_DoRun
	OR_VAR WB_VALUE $STOREBLK_VAL_Read
	EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg $WB_VALUE
	VERIFY_FPGA 32 $STOREBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
	WRITE_FPGA 32 $STOREBLK_ADR_ControlReg #x0
	
	CALL $WAIT_UNTIL_IDLE
	
	VERIFY_FPGA 32 $STOREBLK_ADR_AddressReg WB_VALUE #x0 #xFFFFFFFF

	RETURN_CALL
END_SUB

WAIT_UNTIL_IDLE:
BEGIN_SUB
    LOOP 10
        WAIT_NS 1000
        READ_FPGA 32 $STOREBLK_ADR_StatusReg SIG_RETVAL
        AND_VAR SIG_RETVAL $STOREBLK_BUS_MASK_Busy
        MESSAGE 3 "SIG_RETVAL: $SIG_RETVAL"
        IF $SIG_RETVAL = #x0
            EXIT_LOOP
            RETURN_CALL
        END_IF
        EQU_VAR TMP_VAL $SIG_RETVAL
    END_LOOP
    ERRORPRINT "ERROR: Store is not idle in reasonable time"
        ABORT
        RETURN_CALL
END_SUB

INCLUDE "Defines.stm"
INCLUDE "../hxs_gen/simstm_gen/indirect/wasm_fpga_store_indirect.stm"